report.ncss.name=As3 Ncss report
report.ncss.description=
report.ncss.header=
report.javancss.name=As3NCSS Report
report.javancss.description=Code metric analysis.
report.javancss.title=As3NCSS Metric Results
# titles and links
report.javancss.main.title=As3NCSS Metric Results
report.javancss.main.text=The following document contains the results of a As3NCSS metric analysis.
report.javancss.module.title=Modules
report.javancss.module.link=modules
report.javancss.package.title=Packages
report.javancss.package.link=package
report.javancss.package.text=Packages sorted by NCSS.
report.javancss.object.title=Objects
report.javancss.object.link=object
report.javancss.top=TOP
report.javancss.averages=Averages.
report.javancss.object.byncss=classes containing the most NCSS.
report.javancss.object.byfunction=classes containing the most methods.
report.javancss.function.title=Methods
report.javancss.function.link=method
report.javancss.function.byncss=Methods containing the most NCSS.
report.javancss.explanation.title=Explanations
report.javancss.explanation.link=explanation
# headers
report.javancss.header.module=Module
report.javancss.header.classe=Classes
report.javancss.header.function=Methods
report.javancss.header.ncss=NCSS
report.javancss.header.javadoc=Javadocs
report.javancss.header.package=Package
report.javancss.header.packages=Packages
report.javancss.header.javadoc_line=Javadoc lines
report.javancss.header.single_comment=Single lines comment
report.javancss.header.multi_comment=Multi lines comment
report.javancss.header.object=Object
report.javancss.header.ccn=CCN
# total
report.javancss.header.totals=Totals
report.javancss.header.ncsstotal=NCSS total
report.javancss.header.functiontotal=Methods total
report.javancss.header.classetotal=Classes total
# average
report.javancss.header.averages=Averages
report.javancss.header.ncssaverage=NCSS average
report.javancss.header.programncss=Program NCSS
report.javancss.header.classeaverage=Classes average
report.javancss.header.functionaverage=Methods average
report.javancss.header.javadocaverage=Javadocs average
report.javancss.header.ccnaverage=CCN average
# explanation
report.javancss.explanation.ncss.title=Non Commenting Source Statements (NCSS)
report.javancss.explanation.ncss.paragraph1=Statements for As3NCSS are not statements as specified in the ECMAScript 4 Language Specification but include all kinds of declarations too. Roughly spoken, NCSS is approximately equivalent to counting ';' and '{' characters in source files.
report.javancss.explanation.ncss.paragraph2=Not counted are empty statements, empty blocks or semicolons after closing brackets. Of course, comments don't get counted too. Closing brackets also never get counted, the same applies to blocks in general.
report.javancss.explanation.ncss.paragraph3=In some cases consecutive semicolons are illegal according to the JLS but As3NCSS still tolerates them (thought As3NCSS is still more strict as 'javac'). Nevertheless they are never counted as two statements.
report.javancss.explanation.ccn.title=Cyclomatic Complexity Number (CCN)
report.javancss.explanation.ccn.paragraph1=It is not included in As3NCSS for now
report.javancss.explanation.ccn.paragraph2=
report.javancss.explanation.ccn.paragraph3=
report.javancss.explanation.ccn.paragraph4=
report.javancss.explanation.ccn.paragraph5=
#ncss explanation table
report.javancss.explanation.ncss.table.examples=Examples
report.javancss.explanation.ncss.table.comments=Comments
report.javancss.explanation.ncss.table.package=Package declaration
report.javancss.explanation.ncss.table.import=Import declaration
report.javancss.explanation.ncss.table.class=Class declaration
report.javancss.explanation.ncss.table.interface=Interface declaration
report.javancss.explanation.ncss.table.field=Field declaration
report.javancss.explanation.ncss.table.field.comment=No matter how many fields get actually declared through a comma separated list, and no matter if these fields get actually initialized, only one statement is counted. So \"int a, b, c = 5, d = 6;\" gets only +1 count, not four or even six (let me know if there is good reason to count it differently).
report.javancss.explanation.ncss.table.method=Method declaration
report.javancss.explanation.ncss.table.constructorD=Constructor declaration
report.javancss.explanation.ncss.table.constructorI=Constructor invocation
report.javancss.explanation.ncss.table.statement=Statement declaration
report.javancss.explanation.ncss.table.statement.comment=expression, if, else, while, do, for, switch, break, continue, return, throw, synchronized, catch, finally
report.javancss.explanation.ncss.table.label=Label declaration
report.javancss.explanation.ncss.table.label.comment=normal, case, default
